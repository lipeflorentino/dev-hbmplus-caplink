{
  "C:\\Users\\lipef\\Projetos\\dev-hbmplus-caplink\\packages\\ecg-api": {
    "versionSfCore": null,
    "versionFramework": "4.1.11",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "file": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "app": "ecg-api",
            "service": "ecg-api",
            "plugins": [
              "serverless-iam-roles-per-function"
            ],
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "region": "us-east-1",
              "stage": "production",
              "memorySize": 512,
              "timeout": 10,
              "environment": {
                "TABLE_NAME": "ECGTable"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "CreateECGEntriesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/ecg-api-production-createECGEntries"
                    }
                  },
                  "ListECGEntriesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/ecg-api-production-listECGEntries"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "ecg-api",
                                "production",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ecg-api-production*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ecg-api-production*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "ecg-api",
                            "production",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateECGEntriesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/ecg-api/production/1720466007957-2024-07-08T19:13:27.957Z/ecg-api.zip"
                      },
                      "Handler": "infra/serverless/resources/lambda/handlers/createEntries/handler.main",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "ecg-api-production-createECGEntries",
                      "MemorySize": 512,
                      "Timeout": 10,
                      "Environment": {
                        "Variables": {
                          "TABLE_NAME": "ECGTable",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "CreateECGEntriesIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateECGEntriesIamRoleLambdaExecution",
                      "CreateECGEntriesLogGroup"
                    ]
                  },
                  "ListECGEntriesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/ecg-api/production/1720466007957-2024-07-08T19:13:27.957Z/ecg-api.zip"
                      },
                      "Handler": "infra/serverless/resources/lambda/handlers/listEntries/handler.main",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "ecg-api-production-listECGEntries",
                      "MemorySize": 512,
                      "Timeout": 10,
                      "Environment": {
                        "Variables": {
                          "TABLE_NAME": "ECGTable",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "ListECGEntriesIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "ListECGEntriesIamRoleLambdaExecution",
                      "ListECGEntriesLogGroup"
                    ]
                  },
                  "CreateECGEntriesLambdaVersionur8DduvzquVEJxbgF3l4pHsMtYEeQ1cIloGTQQguwOw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateECGEntriesLambdaFunction"
                      },
                      "CodeSha256": "XJ4iLgWpK20+zl5Cp5994DDN8u62t/w+72qpQR3KBhY="
                    }
                  },
                  "ListECGEntriesLambdaVersionNDLWBNk8z0deGeeurmHrcPT7MadNATM251sfoCPuN8": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ListECGEntriesLambdaFunction"
                      },
                      "CodeSha256": "XJ4iLgWpK20+zl5Cp5994DDN8u62t/w+72qpQR3KBhY="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "production-ecg-api",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceEcg": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "ecg",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodEcgOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEcg"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodEcgPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEcg"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateECGEntriesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "CreateECGEntriesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEcgGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEcg"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ListECGEntriesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ListECGEntriesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1720466006133": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "production"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodEcgOptions",
                      "ApiGatewayMethodEcgPost",
                      "ApiGatewayMethodEcgGet"
                    ]
                  },
                  "CreateECGEntriesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateECGEntriesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ListECGEntriesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ListECGEntriesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateECGEntriesIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "ecg-api",
                                "production",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ecg-api-production-createECGEntries:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:PutItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/ECGTable"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": "createEntries-lambda-role",
                      "ManagedPolicyArns": []
                    }
                  },
                  "ListECGEntriesIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "ecg-api",
                                "production",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ecg-api-production-listECGEntries:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query",
                                  "dynamodb:Scan",
                                  "dynamodb:GetItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/ECGTable"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": "listEntries-lambda-role",
                      "ManagedPolicyArns": []
                    }
                  },
                  "ECGTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "ECGTable",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "id",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "milivolts",
                          "AttributeType": "N"
                        },
                        {
                          "AttributeName": "deviceId",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "id",
                          "KeyType": "HASH"
                        },
                        {
                          "AttributeName": "milivolts",
                          "KeyType": "RANGE"
                        }
                      ],
                      "ProvisionedThroughput": {
                        "ReadCapacityUnits": "5",
                        "WriteCapacityUnits": "5"
                      },
                      "GlobalSecondaryIndexes": [
                        {
                          "IndexName": "DeviceIdIndex",
                          "KeySchema": [
                            {
                              "AttributeName": "deviceId",
                              "KeyType": "HASH"
                            }
                          ],
                          "Projection": {
                            "ProjectionType": "ALL"
                          },
                          "ProvisionedThroughput": {
                            "ReadCapacityUnits": 5,
                            "WriteCapacityUnits": 5
                          }
                        }
                      ]
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-ecg-api-production-ServerlessDeploymentBucketName"
                    }
                  },
                  "CreateECGEntriesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateECGEntriesLambdaVersionur8DduvzquVEJxbgF3l4pHsMtYEeQ1cIloGTQQguwOw"
                    },
                    "Export": {
                      "Name": "sls-ecg-api-production-CreateECGEntriesLambdaFunctionQualifiedArn"
                    }
                  },
                  "ListECGEntriesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ListECGEntriesLambdaVersionNDLWBNk8z0deGeeurmHrcPT7MadNATM251sfoCPuN8"
                    },
                    "Export": {
                      "Name": "sls-ecg-api-production-ListECGEntriesLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/production"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-ecg-api-production-ServiceEndpoint"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "custom": {
              "esbuild": {
                "bundle": true,
                "minify": false,
                "sourcemap": true,
                "target": "node20",
                "platform": "node",
                "concurrency": 10
              }
            },
            "functions": {
              "createECGEntries": {
                "handler": "infra/serverless/resources/lambda/handlers/createEntries/handler.main",
                "events": [
                  {
                    "http": {
                      "path": "ecg",
                      "method": "post",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatementsName": "createEntries-lambda-role",
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:PutItem"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/ECGTable"
                  }
                ],
                "name": "ecg-api-production-createECGEntries",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 512,
                "timeout": 10,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CreateECGEntriesLambdaVersionur8DduvzquVEJxbgF3l4pHsMtYEeQ1cIloGTQQguwOw"
              },
              "listECGEntries": {
                "handler": "infra/serverless/resources/lambda/handlers/listEntries/handler.main",
                "events": [
                  {
                    "http": {
                      "path": "ecg",
                      "method": "get",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatementsName": "listEntries-lambda-role",
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:Query",
                      "dynamodb:Scan",
                      "dynamodb:GetItem"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/ECGTable"
                  }
                ],
                "name": "ecg-api-production-listECGEntries",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 512,
                "timeout": 10,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "ListECGEntriesLambdaVersionNDLWBNk8z0deGeeurmHrcPT7MadNATM251sfoCPuN8"
              }
            },
            "resources": {
              "Resources": {
                "ECGTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "ECGTable",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "milivolts",
                        "AttributeType": "N"
                      },
                      {
                        "AttributeName": "deviceId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "milivolts",
                        "KeyType": "RANGE"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": "5",
                      "WriteCapacityUnits": "5"
                    },
                    "GlobalSecondaryIndexes": [
                      {
                        "IndexName": "DeviceIdIndex",
                        "KeySchema": [
                          {
                            "AttributeName": "deviceId",
                            "KeyType": "HASH"
                          }
                        ],
                        "Projection": {
                          "ProjectionType": "ALL"
                        },
                        "ProvisionedThroughput": {
                          "ReadCapacityUnits": 5,
                          "WriteCapacityUnits": 5
                        }
                      }
                    ]
                  }
                }
              },
              "Outputs": {}
            }
          },
          "configFileDirPath": "C:\\Users\\lipef\\Projetos\\dev-hbmplus-caplink\\packages\\ecg-api",
          "config": {
            "type": "file"
          },
          "options": {
            "stage": "production"
          },
          "stage": "production",
          "dashboard": null
        },
        "resolvers": {}
      },
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "app": "ecg-api",
            "service": "ecg-api",
            "plugins": [
              "serverless-iam-roles-per-function"
            ],
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "region": "us-east-1",
              "stage": "production",
              "memorySize": 512,
              "timeout": 10,
              "environment": {
                "TABLE_NAME": "ECGTable"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "CreateECGEntriesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/ecg-api-production-createECGEntries"
                    }
                  },
                  "ListECGEntriesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/ecg-api-production-listECGEntries"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "ecg-api",
                                "production",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ecg-api-production*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ecg-api-production*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "ecg-api",
                            "production",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateECGEntriesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/ecg-api/production/1720466007957-2024-07-08T19:13:27.957Z/ecg-api.zip"
                      },
                      "Handler": "infra/serverless/resources/lambda/handlers/createEntries/handler.main",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "ecg-api-production-createECGEntries",
                      "MemorySize": 512,
                      "Timeout": 10,
                      "Environment": {
                        "Variables": {
                          "TABLE_NAME": "ECGTable",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "CreateECGEntriesIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateECGEntriesIamRoleLambdaExecution",
                      "CreateECGEntriesLogGroup"
                    ]
                  },
                  "ListECGEntriesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/ecg-api/production/1720466007957-2024-07-08T19:13:27.957Z/ecg-api.zip"
                      },
                      "Handler": "infra/serverless/resources/lambda/handlers/listEntries/handler.main",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "ecg-api-production-listECGEntries",
                      "MemorySize": 512,
                      "Timeout": 10,
                      "Environment": {
                        "Variables": {
                          "TABLE_NAME": "ECGTable",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "ListECGEntriesIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "ListECGEntriesIamRoleLambdaExecution",
                      "ListECGEntriesLogGroup"
                    ]
                  },
                  "CreateECGEntriesLambdaVersionur8DduvzquVEJxbgF3l4pHsMtYEeQ1cIloGTQQguwOw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateECGEntriesLambdaFunction"
                      },
                      "CodeSha256": "XJ4iLgWpK20+zl5Cp5994DDN8u62t/w+72qpQR3KBhY="
                    }
                  },
                  "ListECGEntriesLambdaVersionNDLWBNk8z0deGeeurmHrcPT7MadNATM251sfoCPuN8": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ListECGEntriesLambdaFunction"
                      },
                      "CodeSha256": "XJ4iLgWpK20+zl5Cp5994DDN8u62t/w+72qpQR3KBhY="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "production-ecg-api",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceEcg": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "ecg",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodEcgOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEcg"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodEcgPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEcg"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateECGEntriesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "CreateECGEntriesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodEcgGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceEcg"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ListECGEntriesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ListECGEntriesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1720466006133": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "production"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodEcgOptions",
                      "ApiGatewayMethodEcgPost",
                      "ApiGatewayMethodEcgGet"
                    ]
                  },
                  "CreateECGEntriesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateECGEntriesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ListECGEntriesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ListECGEntriesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateECGEntriesIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "ecg-api",
                                "production",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ecg-api-production-createECGEntries:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:PutItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/ECGTable"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": "createEntries-lambda-role",
                      "ManagedPolicyArns": []
                    }
                  },
                  "ListECGEntriesIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "ecg-api",
                                "production",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ecg-api-production-listECGEntries:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query",
                                  "dynamodb:Scan",
                                  "dynamodb:GetItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/ECGTable"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": "listEntries-lambda-role",
                      "ManagedPolicyArns": []
                    }
                  },
                  "ECGTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "ECGTable",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "id",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "milivolts",
                          "AttributeType": "N"
                        },
                        {
                          "AttributeName": "deviceId",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "id",
                          "KeyType": "HASH"
                        },
                        {
                          "AttributeName": "milivolts",
                          "KeyType": "RANGE"
                        }
                      ],
                      "ProvisionedThroughput": {
                        "ReadCapacityUnits": "5",
                        "WriteCapacityUnits": "5"
                      },
                      "GlobalSecondaryIndexes": [
                        {
                          "IndexName": "DeviceIdIndex",
                          "KeySchema": [
                            {
                              "AttributeName": "deviceId",
                              "KeyType": "HASH"
                            }
                          ],
                          "Projection": {
                            "ProjectionType": "ALL"
                          },
                          "ProvisionedThroughput": {
                            "ReadCapacityUnits": 5,
                            "WriteCapacityUnits": 5
                          }
                        }
                      ]
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-ecg-api-production-ServerlessDeploymentBucketName"
                    }
                  },
                  "CreateECGEntriesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateECGEntriesLambdaVersionur8DduvzquVEJxbgF3l4pHsMtYEeQ1cIloGTQQguwOw"
                    },
                    "Export": {
                      "Name": "sls-ecg-api-production-CreateECGEntriesLambdaFunctionQualifiedArn"
                    }
                  },
                  "ListECGEntriesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ListECGEntriesLambdaVersionNDLWBNk8z0deGeeurmHrcPT7MadNATM251sfoCPuN8"
                    },
                    "Export": {
                      "Name": "sls-ecg-api-production-ListECGEntriesLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/production"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-ecg-api-production-ServiceEndpoint"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "custom": {
              "esbuild": {
                "bundle": true,
                "minify": false,
                "sourcemap": true,
                "target": "node20",
                "platform": "node",
                "concurrency": 10
              }
            },
            "functions": {
              "createECGEntries": {
                "handler": "infra/serverless/resources/lambda/handlers/createEntries/handler.main",
                "events": [
                  {
                    "http": {
                      "path": "ecg",
                      "method": "post",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatementsName": "createEntries-lambda-role",
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:PutItem"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/ECGTable"
                  }
                ],
                "name": "ecg-api-production-createECGEntries",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 512,
                "timeout": 10,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CreateECGEntriesLambdaVersionur8DduvzquVEJxbgF3l4pHsMtYEeQ1cIloGTQQguwOw"
              },
              "listECGEntries": {
                "handler": "infra/serverless/resources/lambda/handlers/listEntries/handler.main",
                "events": [
                  {
                    "http": {
                      "path": "ecg",
                      "method": "get",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatementsName": "listEntries-lambda-role",
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:Query",
                      "dynamodb:Scan",
                      "dynamodb:GetItem"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/ECGTable"
                  }
                ],
                "name": "ecg-api-production-listECGEntries",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 512,
                "timeout": 10,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "ListECGEntriesLambdaVersionNDLWBNk8z0deGeeurmHrcPT7MadNATM251sfoCPuN8"
              }
            },
            "resources": {
              "Resources": {
                "ECGTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "ECGTable",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "milivolts",
                        "AttributeType": "N"
                      },
                      {
                        "AttributeName": "deviceId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "milivolts",
                        "KeyType": "RANGE"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": "5",
                      "WriteCapacityUnits": "5"
                    },
                    "GlobalSecondaryIndexes": [
                      {
                        "IndexName": "DeviceIdIndex",
                        "KeySchema": [
                          {
                            "AttributeName": "deviceId",
                            "KeyType": "HASH"
                          }
                        ],
                        "Projection": {
                          "ProjectionType": "ALL"
                        },
                        "ProvisionedThroughput": {
                          "ReadCapacityUnits": 5,
                          "WriteCapacityUnits": 5
                        }
                      }
                    ]
                  }
                }
              },
              "Outputs": {}
            }
          },
          "configFileDirPath": "C:\\Users\\lipef\\Projetos\\dev-hbmplus-caplink\\packages\\ecg-api",
          "config": {
            "type": "self"
          },
          "options": {
            "stage": "production"
          },
          "stage": "production",
          "dashboard": null
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "C:\\Users\\lipef\\Projetos\\dev-hbmplus-caplink\\packages\\ecg-api",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "app": "ecg-api",
      "service": "ecg-api",
      "plugins": [
        "serverless-iam-roles-per-function"
      ],
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "us-east-1",
        "stage": "production",
        "memorySize": 512,
        "timeout": 10,
        "environment": {
          "TABLE_NAME": "ECGTable"
        },
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "CreateECGEntriesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/ecg-api-production-createECGEntries"
              }
            },
            "ListECGEntriesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/ecg-api-production-listECGEntries"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "ecg-api",
                          "production",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ecg-api-production*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ecg-api-production*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "ecg-api",
                      "production",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "CreateECGEntriesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/ecg-api/production/1720466007957-2024-07-08T19:13:27.957Z/ecg-api.zip"
                },
                "Handler": "infra/serverless/resources/lambda/handlers/createEntries/handler.main",
                "Runtime": "nodejs20.x",
                "FunctionName": "ecg-api-production-createECGEntries",
                "MemorySize": 512,
                "Timeout": 10,
                "Environment": {
                  "Variables": {
                    "TABLE_NAME": "ECGTable",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "CreateECGEntriesIamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateECGEntriesIamRoleLambdaExecution",
                "CreateECGEntriesLogGroup"
              ]
            },
            "ListECGEntriesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/ecg-api/production/1720466007957-2024-07-08T19:13:27.957Z/ecg-api.zip"
                },
                "Handler": "infra/serverless/resources/lambda/handlers/listEntries/handler.main",
                "Runtime": "nodejs20.x",
                "FunctionName": "ecg-api-production-listECGEntries",
                "MemorySize": 512,
                "Timeout": 10,
                "Environment": {
                  "Variables": {
                    "TABLE_NAME": "ECGTable",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "ListECGEntriesIamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ListECGEntriesIamRoleLambdaExecution",
                "ListECGEntriesLogGroup"
              ]
            },
            "CreateECGEntriesLambdaVersionur8DduvzquVEJxbgF3l4pHsMtYEeQ1cIloGTQQguwOw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateECGEntriesLambdaFunction"
                },
                "CodeSha256": "XJ4iLgWpK20+zl5Cp5994DDN8u62t/w+72qpQR3KBhY="
              }
            },
            "ListECGEntriesLambdaVersionNDLWBNk8z0deGeeurmHrcPT7MadNATM251sfoCPuN8": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ListECGEntriesLambdaFunction"
                },
                "CodeSha256": "XJ4iLgWpK20+zl5Cp5994DDN8u62t/w+72qpQR3KBhY="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "production-ecg-api",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceEcg": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "ecg",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodEcgOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceEcg"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodEcgPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceEcg"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateECGEntriesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CreateECGEntriesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodEcgGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceEcg"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ListECGEntriesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ListECGEntriesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1720466006133": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "production"
              },
              "DependsOn": [
                "ApiGatewayMethodEcgOptions",
                "ApiGatewayMethodEcgPost",
                "ApiGatewayMethodEcgGet"
              ]
            },
            "CreateECGEntriesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateECGEntriesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ListECGEntriesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ListECGEntriesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "CreateECGEntriesIamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "ecg-api",
                          "production",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ecg-api-production-createECGEntries:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:PutItem"
                          ],
                          "Resource": "arn:aws:dynamodb:us-east-1:*:table/ECGTable"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": "createEntries-lambda-role",
                "ManagedPolicyArns": []
              }
            },
            "ListECGEntriesIamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "ecg-api",
                          "production",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ecg-api-production-listECGEntries:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:Query",
                            "dynamodb:Scan",
                            "dynamodb:GetItem"
                          ],
                          "Resource": "arn:aws:dynamodb:us-east-1:*:table/ECGTable"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": "listEntries-lambda-role",
                "ManagedPolicyArns": []
              }
            },
            "ECGTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "ECGTable",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "milivolts",
                    "AttributeType": "N"
                  },
                  {
                    "AttributeName": "deviceId",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "id",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "milivolts",
                    "KeyType": "RANGE"
                  }
                ],
                "ProvisionedThroughput": {
                  "ReadCapacityUnits": "5",
                  "WriteCapacityUnits": "5"
                },
                "GlobalSecondaryIndexes": [
                  {
                    "IndexName": "DeviceIdIndex",
                    "KeySchema": [
                      {
                        "AttributeName": "deviceId",
                        "KeyType": "HASH"
                      }
                    ],
                    "Projection": {
                      "ProjectionType": "ALL"
                    },
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 5,
                      "WriteCapacityUnits": 5
                    }
                  }
                ]
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-ecg-api-production-ServerlessDeploymentBucketName"
              }
            },
            "CreateECGEntriesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateECGEntriesLambdaVersionur8DduvzquVEJxbgF3l4pHsMtYEeQ1cIloGTQQguwOw"
              },
              "Export": {
                "Name": "sls-ecg-api-production-CreateECGEntriesLambdaFunctionQualifiedArn"
              }
            },
            "ListECGEntriesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ListECGEntriesLambdaVersionNDLWBNk8z0deGeeurmHrcPT7MadNATM251sfoCPuN8"
              },
              "Export": {
                "Name": "sls-ecg-api-production-ListECGEntriesLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/production"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-ecg-api-production-ServiceEndpoint"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "custom": {
        "esbuild": {
          "bundle": true,
          "minify": false,
          "sourcemap": true,
          "target": "node20",
          "platform": "node",
          "concurrency": 10
        }
      },
      "functions": {
        "createECGEntries": {
          "handler": "infra/serverless/resources/lambda/handlers/createEntries/handler.main",
          "events": [
            {
              "http": {
                "path": "ecg",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "iamRoleStatementsName": "createEntries-lambda-role",
          "iamRoleStatements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:PutItem"
              ],
              "Resource": "arn:aws:dynamodb:us-east-1:*:table/ECGTable"
            }
          ],
          "name": "ecg-api-production-createECGEntries",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 512,
          "timeout": 10,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "CreateECGEntriesLambdaVersionur8DduvzquVEJxbgF3l4pHsMtYEeQ1cIloGTQQguwOw"
        },
        "listECGEntries": {
          "handler": "infra/serverless/resources/lambda/handlers/listEntries/handler.main",
          "events": [
            {
              "http": {
                "path": "ecg",
                "method": "get",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "iamRoleStatementsName": "listEntries-lambda-role",
          "iamRoleStatements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:GetItem"
              ],
              "Resource": "arn:aws:dynamodb:us-east-1:*:table/ECGTable"
            }
          ],
          "name": "ecg-api-production-listECGEntries",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 512,
          "timeout": 10,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "ListECGEntriesLambdaVersionNDLWBNk8z0deGeeurmHrcPT7MadNATM251sfoCPuN8"
        }
      },
      "resources": {
        "Resources": {
          "ECGTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "ECGTable",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "milivolts",
                  "AttributeType": "N"
                },
                {
                  "AttributeName": "deviceId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "milivolts",
                  "KeyType": "RANGE"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": "5",
                "WriteCapacityUnits": "5"
              },
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "DeviceIdIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "deviceId",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  },
                  "ProvisionedThroughput": {
                    "ReadCapacityUnits": 5,
                    "WriteCapacityUnits": 5
                  }
                }
              ]
            }
          }
        },
        "Outputs": {}
      }
    },
    "serviceRawFile": "app: ecg-api\r\nservice: ecg-api\r\n\r\nplugins:\r\n  - serverless-iam-roles-per-function\r\n\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs20.x\r\n  region: us-east-1\r\n  stage: production\r\n  memorySize: 512 # optional, in MB, default is 1024\r\n  timeout: 10 # optional, in seconds, default is 6\r\n  environment:\r\n    TABLE_NAME: 'ECGTable'\r\n\r\ncustom:\r\n  esbuild:\r\n    bundle: true\r\n    minify: false\r\n    sourcemap: true\r\n    target: 'node20'\r\n    platform: 'node'\r\n    concurrency: 10\r\n\r\nfunctions:\r\n  createECGEntries: ${file(./infra/serverless/resources/lambda/handlers/createEntries/createEntries.yml)}\r\n  listECGEntries: ${file(./infra/serverless/resources/lambda/handlers/listEntries/listEntries.yml)}\r\n\r\nresources:\r\n  Resources:\r\n    ECGTable: ${file(./infra/serverless/resources/dynamodb/ecgTable.yml)}",
    "command": [
      "deploy"
    ],
    "options": {
      "stage": "production"
    },
    "error": null,
    "params": {},
    "machineId": "4f355b78885dd795f4bfd964be242a0c",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "d3YDgCZn3KZ1hJ6fFx",
    "orgName": "lipeflorentino",
    "userId": "lGhKfcsyd7rnsS8XbN",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "lipeflorentino",
    "subscription": null,
    "userEmail": "lipeflorentino2@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "851725203148",
    "versionSf": "4.1.11",
    "serviceProviderAwsCfStackName": "ecg-api-production",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:851725203148:stack/ecg-api-production/3322e1c0-3bb8-11ef-a99e-127ce02d7b79",
    "serviceProviderAwsCfStackCreated": "2024-07-06T16:52:59.054Z",
    "serviceProviderAwsCfStackUpdated": "2024-07-08T19:13:34.411Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "CreateECGEntriesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:851725203148:function:ecg-api-production-createECGEntries:7",
        "Description": "Current Lambda function version",
        "ExportName": "sls-ecg-api-production-CreateECGEntriesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ListECGEntriesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:851725203148:function:ecg-api-production-listECGEntries:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-ecg-api-production-ListECGEntriesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://a88r9td2x5.execute-api.us-east-1.amazonaws.com/production",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-ecg-api-production-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "ecg-api-production-serverlessdeploymentbucket-wvz9uqc82kh1",
        "ExportName": "sls-ecg-api-production-ServerlessDeploymentBucketName"
      }
    ]
  }
}