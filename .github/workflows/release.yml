name: Build, Test, Release and Deploy

on:
  push:
    branches:
      - master
  # pull_request:
  #   branches:
  #     - master

jobs:
  filter-changes:
    runs-on: ubuntu-latest
    outputs:
      ecg-api: ${{ steps.filter.outputs.ecg-api }}
      hbm-plus: ${{ steps.filter.outputs.hbm-plus }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Filter changes
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            ecg-api:
              - 'packages/ecg-api/**'
            hbm-plus:
              - 'packages/hbm-plus/**'

  build-ecg-api:
    needs: filter-changes
    if: needs.filter-changes.outputs.ecg-api == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
            fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install

      - name: Run tests
        run: |
          cd packages/ecg-api
          npm test

  deploy-ecg-api:
    runs-on: ubuntu-latest
    needs: build-ecg-api

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Serverless Framework
        run: |
          cd packages/ecg-api  
          npm install -g serverless
          npm install serverless-iam-roles-per-function

      - name: Deploy with Serverless
        run: |
          cd packages/ecg-api 
          serverless deploy --stage production --verbose
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  build-hbm-plus:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: |
        cd packages/hbm-plus 
        npm install

    - name: Run tests
      run: |
        cd packages/hbm-plus
        npm test
  release:
    runs-on: ubuntu-latest
    needs:
      - deploy-ecg-api
      - build-hbm-plus 

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'  # Use the version of Node.js you need

      - name: Install dependencies
        run: npm install

      - name: Run release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release

  # deploy ser√° feito manualmente por agora